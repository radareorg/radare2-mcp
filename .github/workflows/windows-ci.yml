name: windows-ci

on:
  push:
    tags:
      - "[0-9]*"
  pull_request:
    branches: [ main ]

env:
  R2V: 6.0.2

jobs:
  build:
    name: Build r2mcp on Windows (MSYS2 + Meson)
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up MSYS2 (MINGW64)
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: |
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-ninja

      - name: Install Python tools and Meson
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install meson ninja

      - name: Download radare2 release (Windows zip)
         shell: powershell
         run: |
           $R2V = '${{ env.R2V }}'
           $url = "https://github.com/radareorg/radare2/releases/download/$R2V/radare2-$R2V-w64.zip"
           $dest = "$env:TEMP\radare2.zip"
           Write-Output "Downloading $url"
           Invoke-WebRequest -Uri $url -OutFile $dest -UseBasicParsing
           # Prefer installing into MSYS2 prefix if it exists
           $prefix = 'C:\\radare2'
           if (Test-Path 'C:\\msys64\\mingw64') { $prefix = 'C:\\msys64\\mingw64' }
           if (-not (Test-Path $prefix)) { New-Item -ItemType Directory -Path $prefix -Force | Out-Null }
           Expand-Archive -Path $dest -DestinationPath $prefix -Force
           Move-Item -Path "$prefix\radare2-$R2V-w64\*" -Destination $prefix -Force
           Remove-Item -Path "$prefix\radare2-$R2V-w64" -Recurse -Force
           Write-Output "Extracted radare2 contents to $prefix"
           Write-Output "Listing top-level contents of $prefix"
           Get-ChildItem -Path $prefix -Depth 2 | Select-Object -First 200

       - name: Configure Meson
         shell: powershell
         run: |
           $R2V = '${{ env.R2V }}'
           # If radare2 was extracted into /mingw64, tell Meson where to find it.
           meson setup --reconfigure builddir --prefix=/mingw64 --buildtype=release -Dr2_prefix=/mingw64/radare2-$R2V-w64

      - name: Compile
        shell: bash
        run: |
          meson compile -C builddir -v

      - name: Package zip artifact
        if: always()
        shell: powershell
        run: |
          New-Item -ItemType Directory -Force -Path output
          $src = ''
          if (Test-Path builddir/r2mcp.exe) { Copy-Item builddir/r2mcp.exe output/; $src = 'builddir/r2mcp.exe' }
          if (Test-Path builddir/src/r2mcp.exe) { Copy-Item builddir/src/r2mcp.exe output/; $src = 'builddir/src/r2mcp.exe' }
          if ($src -eq '') { Write-Output "Warning: r2mcp.exe not found after build" }
          Compress-Archive -Path output/* -DestinationPath r2mcp-windows.zip -Force

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: r2mcp-windows
          path: r2mcp-windows.zip

      - name: Create GitHub Release (on tag)
        id: create_release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: r2mcp-windows.zip
          asset_name: r2mcp-windows.zip
          asset_content_type: application/zip
